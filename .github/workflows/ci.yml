name: CI

on:
  pull_request:
    branches: [main]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
  pull-requests: write  # This allows the workflow to comment on PRs

jobs:
  code-checks:
    name: CI Code Checks
    runs-on: ubuntu-latest

    steps:
    - name: Check-out Code
      uses: actions/checkout@v4

    - name: Set-up PWD Environment Variable
      run: echo "PWD=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

    - name: Create CI Environment File
      run: |
        cp .devcontainer/.env.ci .devcontainer/.env

    - name: Run pre-commit and pre-push hooks & unit tests
      uses: devcontainers/ci@v0.3
      with:  # Run all code related hooks and skip the terraform ones, they are handled by the terraform-plan action
        runCmd: |
          poetry run pre-commit run --all-files
          poetry run pre-commit run ruff --all-files --hook-stage push
          poetry run pre-commit run flake8 --all-files --hook-stage push
          poetry run pre-commit run codespell --all-files --hook-stage push
          poetry run pre-commit run unit-tests --all-files --hook-stage push
          poetry run pytest -m "not integration and not e2e"
    #     To enable build, samconfig files should include aws account ids (only in private repos)
    #     chmod +x .github/scripts/sam-build-updated-services.sh
    #     .github/scripts/sam-build-updated-services.sh dev
  
  # The reusable workflow checks if terraform file has changed or not, since this is a required status check in the CI
  terraform-plan:
    name: Terraform Plan  
    strategy:
      matrix:
        environment: [dev, staging]
    uses: ./.github/workflows/terraform-plan-reusable.yml
    with:
      environment: ${{ matrix.environment }}
