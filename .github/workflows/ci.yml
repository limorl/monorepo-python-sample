name: CI

on:
  pull_request:
    branches: [main]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
  pull-requests: write  # This allows the workflow to comment on PRs

jobs:
  pr-title-check:
    name: PR Title Check
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install commitlint
        run: npm install @commitlint/config-conventional @commitlint/cli

      - name: Run commitlint on PR title
        run: echo "${{ github.event.pull_request.title }}" | npx commitlint --verbose --config commitlint.config.js

  code-checks:
    name: CI Code Checks
    needs: [pr-title-check]
    runs-on: ubuntu-latest

    steps:
    - name: Check-out Code
      uses: actions/checkout@v4

    - name: Set-up PWD Environment Variable
      run: echo "PWD=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

    - name: Create CI Environment File
      run: |
        cp .devcontainer/.env.ci .devcontainer/.env

    - name: Run pre-commit and pre-push hooks & unit tests
      uses: devcontainers/ci@v0.3
      with:  # Run all code related hooks and skip the terraform ones, they are handled by the terraform-plan action
        runCmd: |
          poetry run pre-commit run --all-files
          poetry run pre-commit run ruff --all-files --hook-stage push
          poetry run pre-commit run flake8 --all-files --hook-stage push
          poetry run pre-commit run codespell --all-files --hook-stage push
          poetry run pre-commit run unit-tests --all-files --hook-stage push
          poetry run pytest -m "not integration and not e2e"
          chmod +x .github/scripts/sam-build-updated-services.sh
          .github/scripts/sam-build-updated-services.sh dev

  check-terraform-changes:
    name: Check for Terraform Changes
    needs: [pr-title-check]
    runs-on: ubuntu-latest
    outputs:
      terraform_changed: ${{ steps.check.outputs.terraform_changed }}
    steps:
      - name: Check-out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full checkout
      
      - name: Check for terraform changes
        id: check
        run: |
          if git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }} | grep -q '^infra/terraform/'; then
            echo "terraform_changed=true" >> $GITHUB_OUTPUT
          else
            echo "terraform_changed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Display terraform_changed output
        run: |
          echo "Terraform changed: ${{ steps.check.outputs.terraform_changed }}"

  terraform-plan:
    name: Run  # The job name of the reusable workflow will be appended automatically 
    needs: [check-terraform-changes]
    if: needs.check-terraform-changes.outputs.terraform_changed == 'true'
    strategy:
      matrix:
        environment: [dev, staging]
    uses: ./.github/workflows/terraform-plan-reusable.yml
    with:
      environment: ${{ matrix.environment }}

# TODO: Add Build Services
