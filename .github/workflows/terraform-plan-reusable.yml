name: Terraform Plan - Reusable Across Environments

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  terraform-plan:
    name: Plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for Terraform Changes
        id: tf-changes
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Processing Pull Request"
            BASE_SHA=${{ github.event.pull_request.base.sha }}
            HEAD_SHA=${{ github.event.pull_request.head.sha }}
          else
            echo "Processing Push Event"
            BASE_SHA=${{ github.event.before }}
            HEAD_SHA=${{ github.event.after }}
          fi
  
          echo "Comparing $BASE_SHA...$HEAD_SHA"
          
          ALL_CHANGED_FILES=$(git diff --name-only $BASE_SHA $HEAD_SHA)
          echo "All changed files:"
          echo "------------------"
          echo "$ALL_CHANGED_FILES"
          
          FILTERED_FILES=$(echo "$ALL_CHANGED_FILES" | grep -E '^infra/terraform/' || true)
          echo "Filtered files:"
          echo "---------------"
          echo "$FILTERED_FILES"
          
          if [ -n "$FILTERED_FILES" ]; then
            echo "terraform_changed=true" >> $GITHUB_OUTPUT
            echo "Matching files found"
          else
            echo "terraform_changed=false" >> $GITHUB_OUTPUT
            echo "No matching files found"
          fi

      - name: Configure AWS credentials
        if: steps.tf-changes.outputs.terraform_changed == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_GITHUB_ACTIONS_ROLE }}
          role-session-name: GithubWorkflow-TerraformPlan-${{ inputs.environment }}
          aws-region: ${{ vars.AWS_PRIMARY_REGION }}

      - name: Setup Terraform
        if: steps.tf-changes.outputs.terraform_changed == 'true'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        if: steps.tf-changes.outputs.terraform_changed == 'true'
        id: terraform-init
        working-directory: ./infra/terraform
        run: terraform init

      - name: Terraform Format
        if: steps.tf-changes.outputs.terraform_changed == 'true'
        id: terraform-fmt
        working-directory: ./infra/terraform
        run: terraform fmt

      - name: Terraform Validate
        if: steps.tf-changes.outputs.terraform_changed == 'true'
        id: terraform-validate
        working-directory: ./infra/terraform
        run: terraform validate
      
      - name: Terraform Plan
        if: steps.tf-changes.outputs.terraform_changed == 'true'
        id: terraform-plan
        working-directory: ./infra/terraform
        run: terraform plan -var-file=environments/${{ inputs.environment }}/terraform.tfvars -out=${{ inputs.environment }}.tfplan

      - name: Debug Terraform Plan
        if: steps.tf-changes.outputs.terraform_changed == 'true'
        id: terraform-plan-env
        working-directory: ./infra/terraform/environments/${{ inputs.environment }}
        run: terraform plan -var-file=terraform.tfvars -out=${{ inputs.environment }}.tfplan

      - name: Upload Terraform Plan
        if: steps.tf-changes.outputs.terraform_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.environment }}.tfplan
          path: ./infra/terraform/${{ inputs.environment }}.tfplan

      - name: Report No Changes
        if: steps.tf-changes.outputs.terraform_changed != 'true'
        run: echo "No changes detected in Terraform files. Skipping Terraform plan for ${{ inputs.environment }} environment."

